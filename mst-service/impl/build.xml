<!--
  * Copyright (c) 2009 University of Rochester
  *
  * This program is free software; you can redistribute it and/or modify it under the terms of the MIT/X11 license. The text of the
  * license can be found at http://www.opensource.org/licenses/mit-license.php and copy of the license can be found on the project
  * website http://www.extensiblecatalog.org/.
  *
  -->
<project name="ms" default="ms.help" xmlns:ivy="antlib:org.apache.ivy.ant">

	<dirname property="ms.dir" file="${ant.file.ms}" />
	
	<property file="${ms.dir}/build.properties" />
	<property file="${mc.src.java}/default.properties" />

	<path id="ms.classpath.compile">
		<fileset dir="${ms.build.lib}">
			<include name="*.jar" />
		</fileset>
	</path>

	<path id="ms.classpath.test.compile">
		<fileset dir="${ms.build.lib}">
			<include name="*.jar" />
		</fileset>
		<pathelement path="${ms.build.classes}" />
	</path>

	<path id="ms.classpath.test.run">
		<fileset dir="${ms.build.lib}">
			<include name="*.jar" />
		</fileset>
		<pathelement path="${ms.build.classes}" />
		<pathelement path="${ms.build.test.classes}" />
	</path>

	<target name="ms.clean">
		<delete dir="${ms.build.dir}" />
	</target>

	<target name="ms.clean.classes">
		<delete dir="${ms.build.classes}" />
		<delete dir="${ms.build.test.classes}" />
	</target>

	<target name="ms.help">
		<echo>
			mst-common help
			ms.src.dir: ${ms.src.dir}
			ms.src.java: ${ms.src.java}
			ms.build.dir: ${ms.build.dir}
			ms.build.ivy.report: ${ms.build.ivy.report}
		</echo>
	</target>

	<target name="ms.init" depends="init">
		<mkdir dir="${ms.build.test.classes}" />
		<mkdir dir="${ms.build.classes}" />
		<mkdir dir="${ms.build.lib}" />
	</target>

	<target name="ms.resolve" depends="ms.init">
		<ivy:resolve file="${ms.dir}/ivy.xml"/>
	</target>

	<target name="ms.ivy-report" depends="ms.resolve"
			description="--> report the resolve actions">
		<mkdir dir="${ms.build.ivy.report}" />
		<ivy:report todir="${ms.build.ivy.report}" />
	</target>

	<target name="ms.retrieve" depends="ms.ivy-report">
		<ivy:retrieve sync="true" pattern="${ms.build.lib}/[artifact]-[revision].[ext]"/>
	</target>

	<target name="ms.compile" depends="ms.retrieve, ms.compile.nodep" />

	<target name="ms.compile.nodep" depends="ms.init">
		<javac srcdir="${ms.src.dir}"
			destdir="${ms.build.classes}"
			classpathref="ms.classpath.compile"
			debug="on"
			deprecation="on"
			debuglevel="lines,vars,source"/>
	</target>

	<target name="ms.doc" depends="ms.compile.nodep">
		<javadoc
			destdir="${ms.build.doc}/api"
			author="true"
			version="true"
			use="true"
			classpathref="ms.classpath.compile"
			linksource="yes"
			windowtitle="eXtensinble Catalog">

			<fileset dir="${ms.src.java}" defaultexcludes="yes">
				<include name="xc/**/*"/>
			</fileset>

			<doctitle><![CDATA[<h1>eXtensible Catalog</h1>]]></doctitle>
		    <bottom>
			<![CDATA[<i>Copyright &#169; 2010 University of Rochester Libraries</i>]]></bottom>
	       <tag name="todo" scope="all" description="To do:"/>
	       <link href="http://download.oracle.com/javase/6/docs/api/"/>
        </javadoc>
	</target>

	<target name="ms.copy-resources" depends="ms.compile, ms.copy-resources.nodep" />
	<target name="ms.copy-resources.nodep" depends="ms.compile.nodep">
		<copy todir="${ms.build.classes}">
			<fileset dir="${ms.src.java}">
				<exclude name="**/*.java" />
				<exclude name="*.properties" />
				<include name="default.properties" />
			</fileset>
		</copy>
		<!--
		<copy tofile="${ms.build.classes}/env.properties" file="${ms.src.java}/${box}.properties" overwrite="true" />
		-->
	</target>

	<target name="ms.jar" depends="ms.copy-resources, ms.jar.nodep" />
	<target name="ms.jar.nodep" depends="ms.copy-resources.nodep, ms.compile.test">
		<jar destfile="${ms.build.dir}/${ms.project-name}-${ms.version}.jar"
			basedir="${ms.build.classes}" />
	</target>

	<target name="ms.deploy" depends="ms.jar.nodep, ms.publish">
		<copy todir="${ms.example}/build/lib" enablemultiplemappings="true">
			<fileset dir="${ms.build.dir}">
				<include name="${ms.project-name}-${ms.version}.jar" />
			</fileset>
		</copy>
		<copy todir="${mst-service}/example/build/lib" 
			file="${ms.build.dir}/${ms.project-name}-${ms.version}.jar" />
		<copy-to-custom-services subdir="build/lib">
			<macro-file-set>
			<fileset dir="${ms.build.dir}">
				<include name="${ms.project-name}-${ms.version}.jar" />
			</fileset>
			</macro-file-set>
		</copy-to-custom-services>
	</target>

	<target name="ms.publish" depends="ms.jar.nodep, ms.resolve">
		<ivy:publish resolver="local" update="true" pubdate="now" pubrevision="${ms.version}" overwrite="true">
			<artifacts pattern="${ms.build.dir}/${ms.project-name}-${ms.version}.[ext]" />
		</ivy:publish>
	</target>

	<target name="init.log.suffix" unless="log.suffix">
		<property name="log.suffix" value="prod" />
	</target>

	<target name="ms.copy-example" depends="init.log.suffix">
		<copy overwrite="true" 
			tofile="${ms.example}/conf/log4j.config.txt" 
			file="${ms.example}/conf/log4j.config.txt.${log.suffix}" />
		<copy-to-custom-services subdir="">
			<macro-file-set>
				<fileset dir="${ms.example}">
					<include name="conf/*" />
					<include name="xsl/*" />
					<include name="build.xml" />
					<include name="build.properties" />
					<include name="ivysettings.xml" />
					<include name="ivy.xml" />
				</fileset>
			</macro-file-set>
		</copy-to-custom-services>
	</target>

	<target name="ms.compile.test" depends="ms.compile.nodep">
		<javac srcdir="${ms.test.dir}"
			destdir="${ms.build.test.classes}"
			classpathref="ms.classpath.test.compile"
			debug="on"
			deprecation="on"
			debuglevel="lines,vars,source"/>
	</target>

	<target name="ms.install-mst">
		<delete dir="${ms.build.mst-instances.dir}" />
		<unzip src="${ms.build.lib}/MST-instances-${mi.version}.jar"
			dest="${ms.build.dir}" />
		<copy todir="${ms.build.mst-instance.dir}" overwrite="true">
			<fileset dir="${ms.test.dir}">
				<include name="**/log4j.config.txt" />
				<include name="**/install.properties" />
			</fileset>
		</copy>
		<sql classpathref="ms.classpath.compile"
				driver="com.mysql.jdbc.Driver"
				url="${DatabaseUrl}"
				userid="${DatabaseUsername}"
				password="${DatabasePassword}">
			<path>
				<fileset dir="${ms.build.mst-instance.dir}/sql">
					<include name="create_database_script.sql"/>
				</fileset>
			</path>
		</sql>
	</target>

	<target name="ms.init.test" unless="${test}">
		<property name="test" value="" />
	</target>

	<target name="ms.test" depends="ms.install-mst, ms.test.nodep" />
	<target name="ms.test.nodep" depends="ms.compile.test, ms.init.test">
		<property name="abs.build.dir" location="${ms.build.dir}" />
		<exec executable="${ant.executable}">
			<arg value="-Dtest=${test}" />
			<arg value="ms.test.internal" />
			<env key="MST_ROOT_DIR" value="${abs.build.dir}/" />
			<env key="MST_SERVICE_TEST_FOLDER" value="${test.folder}" />
		</exec>
	</target>
	
	<target name="ms.start2finishtest" depends="ms.deploy, ms.install-mst, ms.compile.test">
		<ant dir="${mst-service.example}" target="zip.nodep" inheritAll="false" />
		<copy todir="${ms.build.dir}" 
			file="${mst-service.example}/build/example-${mst-service.example.version}.zip">
		</copy>
		<unzip src="${ms.build.dir}/example-${mst-service.example.version}.zip"
			dest="${ms.build.mst-services.dir}" />
		<property name="abs.build.dir" location="${ms.build.dir}" />
		<exec executable="${ant.executable}">
			<arg value="-Dtest=StartToFinishTest" />
			<arg value="ms.test.internal" />
			<env key="MST_ROOT_DIR" value="${abs.build.dir}/" />
		</exec>
	</target>

	<target name="ms.test.internal">
		<path id="ms.classpath.test.run">
			<fileset dir="${ms.build.lib}">
				<include name="*.jar" />
			</fileset>
			<pathelement path="${ms.build.classes}" />
			<pathelement path="${ms.build.test.classes}" />
		</path>
		<taskdef name="testng" classpathref="ms.classpath.compile"
			classname="org.testng.TestNGAntTask" />
		<testng classpathref="ms.classpath.test.run" outputdir="${ms.build.test}">
			<classfileset dir="${ms.build.test.classes}" includes="**/${test}*.class"/>
		</testng>
	</target>

</project>
